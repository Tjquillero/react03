{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\React\\\\02-REACT-EJERCICIOS\\\\02-react-ejercicios\\\\src\\\\components\\\\CrudApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport CrudForm from './CrudForm';\nimport CrudTable from './CrudTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialDb = [{\n  id: 1,\n  name: \"Seiya\",\n  constellation: \"Pegaso\"\n}, {\n  id: 2,\n  name: \"Shiryu\",\n  constellation: \"Dragón\"\n}, {\n  id: 3,\n  name: \"Hyoga\",\n  constellation: \"Cisne\"\n}, {\n  id: 4,\n  name: \"Shun\",\n  constellation: \"Andrómeda\"\n}, {\n  id: 5,\n  name: \"Ikki\",\n  constellation: \"Fénix\"\n}];\n\nconst CrudApp = () => {\n  _s();\n\n  const [db, setDb] = useState(initialDb);\n  const [dataToEdit, setDataToEdit] = useState(null);\n\n  const createData = data => {\n    data.id = Date.now();\n    /* console.log(data); */\n\n    setDb([...db, data]);\n  };\n\n  const updateData = data => {\n    let newData = db.map(el => el.id === data.id ? data : el);\n    setDb(newData);\n  };\n\n  const deleteData = id => {\n    let isDelete = window.confirm(`¿Estás seguro de eliminar el registro con el id '${id}'?`);\n\n    if (isDelete) {\n      let newData = db.filter(el => el.id !== id);\n      setDb(newData);\n    } else {\n      return;\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"CRUD APP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"grid-1-2\",\n      children: [/*#__PURE__*/_jsxDEV(CrudForm, {\n        createData: createData,\n        updateData: updateData,\n        dataToEdit: dataToEdit,\n        setDataToEdit: setDataToEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CrudTable, {\n        data: db,\n        setDataToEdit: setDataToEdit,\n        deleteData: deleteData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CrudApp, \"BbbqOwK5yYWsQDfW0qhqqbjv/zM=\");\n\n_c = CrudApp;\nexport default CrudApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"CrudApp\");","map":{"version":3,"sources":["C:/Users/User/Desktop/React/02-REACT-EJERCICIOS/02-react-ejercicios/src/components/CrudApp.js"],"names":["React","useState","CrudForm","CrudTable","initialDb","id","name","constellation","CrudApp","db","setDb","dataToEdit","setDataToEdit","createData","data","Date","now","updateData","newData","map","el","deleteData","isDelete","window","confirm","filter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,SAAS,GAAG,CACd;AACIC,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,IAAI,EAAE,OAFV;AAGIC,EAAAA,aAAa,EAAE;AAHnB,CADc,EAMd;AACIF,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,IAAI,EAAE,QAFV;AAGIC,EAAAA,aAAa,EAAE;AAHnB,CANc,EAWd;AACIF,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,IAAI,EAAE,OAFV;AAGIC,EAAAA,aAAa,EAAE;AAHnB,CAXc,EAgBd;AACIF,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,IAAI,EAAE,MAFV;AAGIC,EAAAA,aAAa,EAAE;AAHnB,CAhBc,EAqBd;AACIF,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,IAAI,EAAE,MAFV;AAGIC,EAAAA,aAAa,EAAE;AAHnB,CArBc,CAAlB;;AA6BA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcT,QAAQ,CAACG,SAAD,CAA5B;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,IAAD,CAA5C;;AACA,QAAMY,UAAU,GAAIC,IAAD,IAAU;AACzBA,IAAAA,IAAI,CAACT,EAAL,GAAUU,IAAI,CAACC,GAAL,EAAV;AACA;;AACAN,IAAAA,KAAK,CAAC,CAAC,GAAGD,EAAJ,EAAQK,IAAR,CAAD,CAAL;AAGH,GAND;;AAQA,QAAMG,UAAU,GAAIH,IAAD,IAAU;AACzB,QAAII,OAAO,GAAGT,EAAE,CAACU,GAAH,CAAOC,EAAE,IAAIA,EAAE,CAACf,EAAH,KAAUS,IAAI,CAACT,EAAf,GAAoBS,IAApB,GAA2BM,EAAxC,CAAd;AACAV,IAAAA,KAAK,CAACQ,OAAD,CAAL;AACH,GAHD;;AAKA,QAAMG,UAAU,GAAIhB,EAAD,IAAQ;AACvB,QAAIiB,QAAQ,GAAGC,MAAM,CAACC,OAAP,CAAgB,oDAAmDnB,EAAG,IAAtE,CAAf;;AAEA,QAAGiB,QAAH,EAAa;AACT,UAAIJ,OAAO,GAAGT,EAAE,CAACgB,MAAH,CAAUL,EAAE,IAAIA,EAAE,CAACf,EAAH,KAAUA,EAA1B,CAAd;AACAK,MAAAA,KAAK,CAACQ,OAAD,CAAL;AACH,KAHD,MAGM;AACF;AACH;;AAAA;AACJ,GATD;;AAWF,sBACE;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAS,MAAA,SAAS,EAAC,UAAnB;AAAA,8BACA,QAAC,QAAD;AACA,QAAA,UAAU,EAAEL,UADZ;AAEA,QAAA,UAAU,EAAEI,UAFZ;AAGA,QAAA,UAAU,EAAGN,UAHb;AAIA,QAAA,aAAa,EAAIC;AAJjB;AAAA;AAAA;AAAA;AAAA,cADA,eAMA,QAAC,SAAD;AAAW,QAAA,IAAI,EAAEH,EAAjB;AACA,QAAA,aAAa,EAAIG,aADjB;AAEA,QAAA,UAAU,EAAIS;AAFd;AAAA;AAAA;AAAA;AAAA,cANA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA1CD;;GAAMb,O;;KAAAA,O;AA4CN,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport CrudForm from './CrudForm';\r\nimport CrudTable from './CrudTable';\r\n\r\nconst initialDb = [\r\n    {\r\n        id: 1,\r\n        name: \"Seiya\",\r\n        constellation: \"Pegaso\",\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Shiryu\",\r\n        constellation: \"Dragón\",\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Hyoga\",\r\n        constellation: \"Cisne\",\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Shun\",\r\n        constellation: \"Andrómeda\",\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Ikki\",\r\n        constellation: \"Fénix\",\r\n    },\r\n];\r\n\r\n\r\nconst CrudApp = () => {\r\n    const [db, setDb] = useState(initialDb);\r\n    const [dataToEdit, setDataToEdit] = useState(null);\r\n    const createData = (data) => {\r\n        data.id = Date.now();\r\n        /* console.log(data); */\r\n        setDb([...db, data]);\r\n        \r\n        \r\n    };\r\n\r\n    const updateData = (data) => {\r\n        let newData = db.map(el => el.id === data.id ? data : el);\r\n        setDb(newData);\r\n    };\r\n\r\n    const deleteData = (id) => {\r\n        let isDelete = window.confirm(`¿Estás seguro de eliminar el registro con el id '${id}'?`);\r\n\r\n        if(isDelete) {\r\n            let newData = db.filter(el => el.id !== id);\r\n            setDb(newData);\r\n        }else {\r\n            return;\r\n        };\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <h2>CRUD APP</h2>\r\n        <article className='grid-1-2'>\r\n        <CrudForm\r\n        createData={createData}\r\n        updateData={updateData}\r\n        dataToEdit ={dataToEdit}\r\n        setDataToEdit = {setDataToEdit}/>\r\n        <CrudTable data={db}\r\n        setDataToEdit = {setDataToEdit}\r\n        deleteData = {deleteData}/>\r\n        </article>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CrudApp\r\n"]},"metadata":{},"sourceType":"module"}