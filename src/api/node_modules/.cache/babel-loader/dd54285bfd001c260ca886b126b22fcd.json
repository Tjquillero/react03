{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\React\\\\02-REACT-EJERCICIOS\\\\02-react-ejercicios\\\\src\\\\components\\\\CrudForm.js\",\n    _s = $RefreshSig$();\n\n/* import React, { useState, useEffect } from 'react';\r\nconst initialForm = {\r\n    name: \"\",\r\n    constellation: \"\",\r\n    id: null,\r\n};\r\n\r\n\r\nconst CrudForm = ({createData, updateData, dataToEdit, setDataToEdit}) => {\r\n    const [form, setForm] = useState({initialForm});\r\n    const handleChange = (e) => {\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]:e.target.value,\r\n        });\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!form.name || !form.constellation)\r\n        alert(\"Datos incompletos\");\r\n        return;\r\n    };\r\n    if (form.id === null) {\r\n        createData(form);\r\n    }else {\r\n        updateData(form);\r\n    }\r\n    handleReset();\r\n\r\n    const handleReset = (e) => {\r\n        setForm(initialForm);\r\n        setDataToEdit(null);\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <h3>Agregar</h3>\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n            type= \"text\"\r\n            name= \"name\"\r\n            placeholder = \"Nombre\"\r\n            onChange={handleChange} value={form.name}/>\r\n            <input\r\n            type= \"text\"\r\n            name= \"constellation\"\r\n            placeholder = \"Constelación\" onChange={handleChange} value={form.constellation}/>\r\n            <input type=\"submit\" value=\"Enviar\"/>\r\n            <input type=\"reset\" value=\"Limpiar\" onClick={handleReset}/>\r\n        </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CrudForm */\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialForm = {\n  name: \"\",\n  constellation: \"\",\n  id: null\n};\n\nconst CrudForm = _ref => {\n  _s();\n\n  let {\n    createData,\n    updateData,\n    dataToEdit,\n    setDataToEdit\n  } = _ref;\n  const [form, setForm] = useState(initialForm);\n  useEffect(() => {\n    if (dataToEdit) {\n      setForm(dataToEdit);\n    } else {\n      setForm(initialForm);\n    }\n  }, [dataToEdit]);\n\n  const handleChange = e => {\n    setForm({ ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!form.name || !form.constellation) {\n      alert(\"Datos incompletos\");\n      return;\n    }\n\n    if (form.id === null) {\n      createData(form);\n    } else {\n      updateData(form);\n    }\n\n    handleReset();\n  };\n\n  const handleReset = e => {\n    setForm(initialForm);\n    setDataToEdit(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: dataToEdit ? \"Editar\" : \"Agregar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Nombre\",\n        onChange: handleChange,\n        value: form.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"constellation\",\n        placeholder: \"Constelaci\\xF3n\",\n        onChange: handleChange,\n        value: form.constellation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"reset\",\n        value: \"Limpiar\",\n        onClick: handleReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CrudForm, \"WjKPOwlZ0WFAf6j4y2LEbQ5fXbM=\");\n\n_c = CrudForm;\nexport default CrudForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CrudForm\");","map":{"version":3,"sources":["C:/Users/User/Desktop/React/02-REACT-EJERCICIOS/02-react-ejercicios/src/components/CrudForm.js"],"names":["React","useState","useEffect","initialForm","name","constellation","id","CrudForm","createData","updateData","dataToEdit","setDataToEdit","form","setForm","handleChange","e","target","value","handleSubmit","preventDefault","alert","handleReset"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,IAAI,EAAE,EADY;AAElBC,EAAAA,aAAa,EAAE,EAFG;AAGlBC,EAAAA,EAAE,EAAE;AAHc,CAApB;;AAMA,MAAMC,QAAQ,GAAG,QAA2D;AAAA;;AAAA,MAA1D;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,UAAd;AAA0BC,IAAAA,UAA1B;AAAsCC,IAAAA;AAAtC,GAA0D;AAC1E,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAACE,WAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,UAAJ,EAAgB;AACdG,MAAAA,OAAO,CAACH,UAAD,CAAP;AACD,KAFD,MAEO;AACLG,MAAAA,OAAO,CAACV,WAAD,CAAP;AACD;AACF,GANQ,EAMN,CAACO,UAAD,CANM,CAAT;;AAQA,QAAMI,YAAY,GAAIC,CAAD,IAAO;AAC1BF,IAAAA,OAAO,CAAC,EACN,GAAGD,IADG;AAEN,OAACG,CAAC,CAACC,MAAF,CAASZ,IAAV,GAAiBW,CAAC,CAACC,MAAF,CAASC;AAFpB,KAAD,CAAP;AAID,GALD;;AAOA,QAAMC,YAAY,GAAIH,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACI,cAAF;;AAEA,QAAI,CAACP,IAAI,CAACR,IAAN,IAAc,CAACQ,IAAI,CAACP,aAAxB,EAAuC;AACrCe,MAAAA,KAAK,CAAC,mBAAD,CAAL;AACA;AACD;;AAED,QAAIR,IAAI,CAACN,EAAL,KAAY,IAAhB,EAAsB;AACpBE,MAAAA,UAAU,CAACI,IAAD,CAAV;AACD,KAFD,MAEO;AACLH,MAAAA,UAAU,CAACG,IAAD,CAAV;AACD;;AAEDS,IAAAA,WAAW;AACZ,GAfD;;AAiBA,QAAMA,WAAW,GAAIN,CAAD,IAAO;AACzBF,IAAAA,OAAO,CAACV,WAAD,CAAP;AACAQ,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAA,gBAAKD,UAAU,GAAG,QAAH,GAAc;AAA7B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEQ,YAAhB;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,WAAW,EAAC,QAHd;AAIE,QAAA,QAAQ,EAAEJ,YAJZ;AAKE,QAAA,KAAK,EAAEF,IAAI,CAACR;AALd;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,eAFP;AAGE,QAAA,WAAW,EAAC,iBAHd;AAIE,QAAA,QAAQ,EAAEU,YAJZ;AAKE,QAAA,KAAK,EAAEF,IAAI,CAACP;AALd;AAAA;AAAA;AAAA;AAAA,cARF,eAeE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAfF,eAgBE;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,KAAK,EAAC,SAA1B;AAAoC,QAAA,OAAO,EAAEgB;AAA7C;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA/DD;;GAAMd,Q;;KAAAA,Q;AAiEN,eAAeA,QAAf","sourcesContent":["/* import React, { useState, useEffect } from 'react';\r\nconst initialForm = {\r\n    name: \"\",\r\n    constellation: \"\",\r\n    id: null,\r\n};\r\n\r\n\r\nconst CrudForm = ({createData, updateData, dataToEdit, setDataToEdit}) => {\r\n    const [form, setForm] = useState({initialForm});\r\n    const handleChange = (e) => {\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]:e.target.value,\r\n        });\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!form.name || !form.constellation)\r\n        alert(\"Datos incompletos\");\r\n        return;\r\n    };\r\n    if (form.id === null) {\r\n        createData(form);\r\n    }else {\r\n        updateData(form);\r\n    }\r\n    handleReset();\r\n\r\n    const handleReset = (e) => {\r\n        setForm(initialForm);\r\n        setDataToEdit(null);\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <h3>Agregar</h3>\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n            type= \"text\"\r\n            name= \"name\"\r\n            placeholder = \"Nombre\"\r\n            onChange={handleChange} value={form.name}/>\r\n            <input\r\n            type= \"text\"\r\n            name= \"constellation\"\r\n            placeholder = \"Constelación\" onChange={handleChange} value={form.constellation}/>\r\n            <input type=\"submit\" value=\"Enviar\"/>\r\n            <input type=\"reset\" value=\"Limpiar\" onClick={handleReset}/>\r\n        </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CrudForm */\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst initialForm = {\r\n  name: \"\",\r\n  constellation: \"\",\r\n  id: null,\r\n};\r\n\r\nconst CrudForm = ({ createData, updateData, dataToEdit, setDataToEdit }) => {\r\n  const [form, setForm] = useState(initialForm);\r\n\r\n  useEffect(() => {\r\n    if (dataToEdit) {\r\n      setForm(dataToEdit);\r\n    } else {\r\n      setForm(initialForm);\r\n    }\r\n  }, [dataToEdit]);\r\n\r\n  const handleChange = (e) => {\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!form.name || !form.constellation) {\r\n      alert(\"Datos incompletos\");\r\n      return;\r\n    }\r\n\r\n    if (form.id === null) {\r\n      createData(form);\r\n    } else {\r\n      updateData(form);\r\n    }\r\n\r\n    handleReset();\r\n  };\r\n\r\n  const handleReset = (e) => {\r\n    setForm(initialForm);\r\n    setDataToEdit(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>{dataToEdit ? \"Editar\" : \"Agregar\"}</h3>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Nombre\"\r\n          onChange={handleChange}\r\n          value={form.name}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"constellation\"\r\n          placeholder=\"Constelación\"\r\n          onChange={handleChange}\r\n          value={form.constellation}\r\n        />\r\n        <input type=\"submit\" value=\"Enviar\" />\r\n        <input type=\"reset\" value=\"Limpiar\" onClick={handleReset} />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CrudForm; "]},"metadata":{},"sourceType":"module"}